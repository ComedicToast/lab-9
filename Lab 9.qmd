---
title: "Lab 9"
format: html
editor: source
---

# Library and function load

```{r}
#| message: false
library(tidyverse)
library(ggthemes)
library(scales)
```


```{r}
#| label: main art maker

cart_styled_plot <- function(data = NULL, palette) {
  ggplot(
    data = data,
    mapping = aes(
      x = x0,
      y = y0,
      xend = x1,
      yend = y1,
      colour = shade,
      size = size
    )) + 
    scale_y_continuous(
      expand = c(0, 0),
      limits = c(0, 1), 
      oob = scales::oob_keep
    ) +
    scale_x_continuous(
      expand = c(0, 0), 
      limits = c(0, 1), 
      oob = scales::oob_keep
    ) + 
    scale_colour_gradientn(colours = palette) + 
    scale_size(range = c(0, 10)) + 
    theme_void() + 
    guides(
      colour = guide_none(),
      size = guide_none(),
      fill = guide_none(),
      shape = guide_none()
    )
}
```

```{r}
#| label: make some random data
sample_data <- function(seed = NULL, n = 100){
  if(!is.null(seed)) set.seed(seed)
  dat <- tibble(
    x0 = runif(n),
    y0 = runif(n),
    x1 = x0 + runif(n, min = -.2, max = .2),
    y1 = y0 + runif(n, min = -.2, max = .2),
    shade = runif(n), 
    size = runif(n),
    shape = factor(sample(0:22, size = n, replace = TRUE))
  )
}
```

```{r}
#| label: color pallettes
sample_canva <- function(seed = NULL, n = 4) {
  if(!is.null(seed)) set.seed(seed)
  sample(ggthemes::canva_palettes, 1)[[1]] |>
    (\(x) colorRampPalette(x)(n))()  
}
```

# Art piece 1

## Title: Cartesian Abstraction

```{r}
dat <- sample_data(n = 1000, seed = 935) %>%
  mutate(y1 = y0, size = size/3)

dat2 <- sample_data(n = 25, seed = 346)
  

cart_styled_plot(palette = sample_canva(seed = 1111)) +
  geom_segment(data = dat, linetype = "3432") +
  geom_point(data = dat2 |> mutate(size = size/5), color = "gold") +
  geom_segment(data = dat2 |> mutate(size = size/100), lineend = "round", 
    colour = "gold") 
```

## Museum Description

This piece represents 

## Description of code choices

# Art piece 2

```{r}

```

